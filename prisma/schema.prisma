// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Users {
  id        String      @id @default(uuid())
  firstName String
  lastName  String
  email     String      @unique
  password  String
  UserRoles UserRoles[]
  ClientAppointments Appointments[] @relation("clientAppointments")
  ProviderAppointments Appointments[] @relation("providerAppointments")
  userAvailabilityTimes UserAvailabilityTimes[]
}

model UserRoles {
  id      String @id @default(uuid())
  users   Users  @relation(fields: [usersId], references: [id])
  usersId String
  roles   Roles  @relation(fields: [rolesId], references: [id])
  rolesId String

  @@unique(fields: [usersId, rolesId], map: "userRoleCompositeKey")
}

model Roles {
  id        String      @id @default(uuid())
  role      String      @unique
  UserRoles UserRoles[]
}

model Appointments {
  id String @id @default(uuid())
  clients Users @relation("clientAppointments",fields: [clientsId], references: [id])
  clientsId String
  providers Users @relation("providerAppointments",fields: [providersId], references: [id])
  providersId String
  startDate DateTime
  endDate DateTime
}

model UserAvailabilityTimes {
  id String @id @default(uuid())
  users Users @relation(fields: [usersId], references: [id])
  usersId String
  startTimeUtc TimeSlots @relation("startTimeUtc", fields:[startTimeId], references: [id])
  startTimeId Int
  endTimeUtc TimeSlots @relation("endTimeUtc", fields:[endTimeId], references: [id])
  endTimeId Int
  DayOfWeek DayOfWeek @relation(fields: [dayOfWeekUtc], references: [dayOfWeek])
  dayOfWeekUtc Int
}

model DayOfWeek {
  dayOfWeek Int @id @db.SmallInt
  userAvailabilityTimes UserAvailabilityTimes[]
}

model TimeSlots {
  id Int @id @default(autoincrement())
  timeUTC DateTime @db.Time() @unique
  UserAvailabilityStartTime UserAvailabilityTimes[] @relation("startTimeUtc")
  UserAvailabilityEndTime UserAvailabilityTimes[] @relation("endTimeUtc")
}